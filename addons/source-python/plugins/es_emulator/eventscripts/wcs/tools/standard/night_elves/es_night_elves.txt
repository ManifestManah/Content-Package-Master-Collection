//////////////////////
//Standard Race Pack//
//Version 1.1.0A    //
//////////////////////

block spawn
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Spawn (START)
	}
	es wcsgroup set evasion event_var(userid) 0
	es wcsgroup set evasion_chance event_var(userid) 0
	es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
	es_xmath wcs_z1 + 20
	es_delayed .3 es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 10 200 2 10 100 0 175 175 255 155 1
	es_xmath wcs_z1 + 10
	es_delayed .2 es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 10 200 2 10 100 0 175 175 255 155 1
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Spawn (END)
	}
}

block death
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Death (START)
	}
	es wcsgroup set evasion event_var(userid) 0
	es wcsgroup set evasion_chance event_var(userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Death (END)
	}
}

block onchange
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] OnChange (START)
	}
	es wcsgroup set evasion server_var(wcs_userid) 0
	es wcsgroup set evasion_chance server_var(wcs_userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] OnChange (END)
	}
}

block evade
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 1 (START)
	}
	es wcsgroup set evasion event_var(userid) 1
	es wcsgroup set evasion_chance event_var(userid) server_var(wcs_chance)
    es wcsgroup get evasion_count wcs_tmp1 event_var(userid)
	es wcs_getlanguage wcs_lng "player_skill1_lastround" 0 "night_elves"
	es wcs_xtell event_var(userid) server_var(wcs_lng) value1 server_var(wcs_tmp1)
	es wcs_getlanguage wcs_lng "player_skill1_dodge" 0 "night_elves"
	es wcs_xtell event_var(userid) server_var(wcs_lng) value1 server_var(wcs_chance)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 1 (END)
	}
}

block thorns
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 2 (START)
	}
	if (server_var(wcs_dice2) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do 
		{
			if (event_var(es_attackerdead) = 0) do 
			{
				es damage event_var(attacker) server_var(wcs_dmg) 0 event_var(userid)
				es wcs_getlanguage wcs_lng "target_skill2" 0 "night_elves"
				es wcs_xcentertell event_var(attacker) server_var(wcs_lng) value1 server_var(wcs_dmg) value2 event_var(es_username)
				es wcs_getlanguage wcs_lng "player_skill2" 0 "night_elves"
				es wcs_xcentertell event_var(userid) server_var(wcs_lng) value1 server_var(wcs_dmg) value2 event_var(es_attackername)
				es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
				es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(attacker)
				es_xmath wcs_z1 + 15
				es_xmath wcs_z2 + 15
				es est_effect 3 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 1 8 8 175 175 255 155
				es est_effect 3 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 1 15 15 175 175 200 155
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 2 (END)
	}
}

block trueshot
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 3 (START)
	}
	if (server_var(wcs_dice3) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do 
		{
			if (event_var(es_attackerdead) = 0) do 
			{
				es damage event_var(userid) server_var(wcs_dmg) 0 event_var(attacker)
				es wcs_getlanguage wcs_lng "player_skill3" 0 "night_elves"
				es wcs_xcentertell event_var(attacker) server_var(wcs_lng) value1 server_var(wcs_dmg)
				es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
				es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(attacker)
				es_xmath wcs_z1 + 10
				es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 40 41 1 10 100 0 175 175 255 155 1
				es_xmath wcs_z1 + 10
				es_xmath wcs_z2 + 20
				es est_effect 3 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 1 15 15 175 175 255 155
				es_xmath wcs_z1 + 10
				es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 40 41 1 10 100 0 175 175 255 155 1
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 3 (END)
	}
}

block roots
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 4 (START)
	}
	es_xset wcs_execute_ultimate 0
	ifx true(wcs_ffa_enabled) do
	{
		es_xset wcs_targetteam "#alive"
		es_getlivingplayercount wcs_pcount
		es_set wcs_ffa_userid server_var(wcs_userid)
	}
	ifx false(wcs_ffa_enabled) do
	{
		es_getplayerteam wcs_team server_var(wcs_userid)
		if (server_var(wcs_team) = 2) do
		{
			es_xset wcs_targetteam "#ct,#alive"
			es_getlivingplayercount wcs_pcount 3
		}
		if (server_var(wcs_team) = 3) do
		{
			es_xset wcs_targetteam "#t,#alive"
			es_getlivingplayercount wcs_pcount 2
		}
	}
	if (server_var(wcs_targetteam) != 0) do
	{	
		if (server_var(wcs_pcount) > 0) do
		{
			es_xset wcs_counter 0
			es_xset wcs_initial_players_struck 0
			es_xset wcs_count_players_ultimate_immunity 0
			es_xset wcs_count_players_actually_affected 0
			es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_userid)
			es wcs_nearcoord wcs_targetid server_var(wcs_targetteam) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_radius) "es_xdoblock wcs/tools/standard/night_elves/ultimate_checks_roots"
			if (server_var(wcs_execute_ultimate) == 1) do
			{
				es_playsound server_var(wcs_userid) wcs/root.mp3 .7
				es wcs_getlanguage wcs_lng "player_skill4_centertell" 0 "night_elves"
				es wcs_xcentertell server_var(wcs_userid) server_var(wcs_lng) value1 server_var(wcs_count_players_actually_affected) value2 server_var(wcs_duration)
			}
		}
		else do
		{
			es_xset wcs_ultinotexec 1
			es wcs_getlanguage wcs_lng "check_skill4_failed_living" 0 "night_elves"
			es wcs_xtell server_var(wcs_userid) server_var(wcs_lng)
		}
		if (server_var(wcs_counter) = 0) do
		{
			es wcs_getlanguage wcs_lng "check_skill4_failed_nearby" 0 "night_elves"
			es wcs_xtell server_var(wcs_userid) server_var(wcs_lng)
			es_xset wcs_ultinotexec 1
		}
	}
	else dos
	{
		es_xset wcs_ultinotexec 1
		es wcs_getlanguage wcs_lng "check_skill4_failed_targeting" 0 "night_elves"
		es wcs_xtell server_var(wcs_userid) server_var(wcs_lng)
	}
	if (server_var(wcs_ultinotexec) = 1) then es wcs_cancelulti server_var(wcs_userid)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 4 (END)
	}
}

block ultimate_checks_roots 
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 4 (CHECKS START)
	}
	ifx true(wcs_ffa_enabled) do
	{
		es_xset wcs_execute_ultimate_ffa 1
		if (server_var(wcs_targetid) != server_var(wcs_ffa_userid)) do
		{
			es_xset wcs_execute_ultimate_ffa 0
		}
	}
	ifx false(wcs_execute_ultimate_ffa) do
	{
		es_exists ex userid server_var(wcs_targetid)
		if (server_var(ex) = 1) do
		{
			es getplayerinfo wcs_alive server_var(wcs_targetid) isdead
			if (server_var(wcs_alive) = 0) do
			{
				es_xmath wcs_counter + 1
				if (server_var(wcs_counter) > 0) do
				{
					if (server_var(wcs_counter) <= 20) do
					{
						es_set wcs_initial_players_struck server_var(wcs_counter)
						es wcsgroup get ulti_immunity wcs_tmp server_var(wcs_targetid)
						if (server_var(wcs_tmp) != 1) do
						{
							es_xset wcs_ultinotexec 0
							es_xset wcs_execute_ultimate 1
							es_xmath wcs_count_players_actually_affected + 1
							es_xdoblock wcs/tools/standard/night_elves/ultimate_final_roots
						}
						if (server_var(wcs_tmp) == 1) do
						{
							es_xmath wcs_count_players_ultimate_immunity + 1
							if (server_var(wcs_count_players_ultimate_immunity) != server_var(wcs_initial_players_struck)) do
							{
								es wcs_getlanguage wcs_lng "check_skill4_failed_target_is_immune" 0 "night_elves"
								es wcs_xtell server_var(wcs_targetid) server_var(wcs_lng)
								es wcs_getlanguage wcs_lng "check_skill4_failed_some_are_immune" 0 "night_elves"
								es wcs_xtell server_var(wcs_userid) server_var(wcs_lng) value1 server_var(wcs_count_players_ultimate_immunity)
							}
							if (server_var(wcs_count_players_ultimate_immunity) == server_var(wcs_initial_players_struck)) do
							{
								es wcs_getlanguage wcs_lng "check_skill4_failed_all_are_immune" 0 "night_elves"
								es wcs_xtell server_var(wcs_userid) server_var(wcs_lng)
								es_xset wcs_ultinotexec 1
							}
						}
					}
					else do
					{
						es wcs_getlanguage wcs_lng "check_skill4_failed_too_many_targets" 0 "night_elves"
						es wcs_xtell server_var(wcs_userid) server_var(wcs_lng)
						es_xset wcs_ultinotexec 1
					}
				}
			}
		}	
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 4 (CHECKS END)
	}
}

block ultimate_final_roots
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 4 (EXECUTED START)
	}
	es wcsgroup get is_frozen wcs_tmp4 server_var(wcs_targetid)
	if (server_var(wcs_tmp4) == 1) do
	{
		es wcs_getlanguage wcs_lng "check_skill4_failed_already_frozen" 0 "night_elves"
		es wcs_xtell server_var(wcs_userid) server_var(wcs_lng)
	}
	if (server_var(wcs_tmp4) == 0) do
	{
		es wcsgroup set is_frozen server_var(wcs_targetid) 1
		es_delayed server_var(wcs_duration) wcsgroup set is_frozen server_var(wcs_targetid) 0
		es wcs_setfx freeze server_var(wcs_targetid) = 1 server_var(wcs_duration)
		es_playsound server_var(wcs_targetid) wcs/root.mp3 .8
		es wcs_getlanguage wcs_lng "target_skill4_centertell" 0 "night_elves"
		es wcs_xcentertell server_var(wcs_targetid) server_var(wcs_lng) value1 server_var(wcs_duration)
	}
	es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_userid)
	es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_targetid)
	es_xmath wcs_z1 + 38
	es_xmath wcs_z2 + 38
	es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
	es est_effect_06 #a 0 sprites/laser.vmt server_var(vector1) server_var(vector2) 10 1 5 5 10 4 1 160 0 155 2
	es est_effect_06 #a 0 sprites/laser.vmt server_var(vector1) server_var(vector2) 10 1 5 5 10 2 3 108 0 180 2
	es est_effect_06 #a 0 sprites/laser.vmt server_var(vector1) server_var(vector2) 10 1 5 5 10 4 2 80 0 190 2
	es est_effect 10 #a 0 sprites/laser.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 60 20 1 3 3 10 0 80 0 155 2
	es est_effect 10 #a 0 sprites/laser.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 75 35 1 3 3 10 0 180 0 190 2
	es_xmath wcs_z2 - 13
	es est_effect 10 #a 0 sprites/laser.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 60 20 1 3 3 10 0 80 0 155 2
	es est_effect 10 #a 0 sprites/laser.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 75 35 1 3 3 10 0 180 0 190 2
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Night Elves - [Block] Skill: 4 (EXECUTED END)
	}
}