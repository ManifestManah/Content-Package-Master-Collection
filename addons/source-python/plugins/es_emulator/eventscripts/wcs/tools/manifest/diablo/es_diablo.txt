////////////////////////////////
//Various Authors V4 Race Pack//
//Version 1.0.0D              //
////////////////////////////////

block thief
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 1 (START)
	}
	if (server_var(wcs_dice) <= 10) do
	{
		if (event_var(es_attackerdead) = 0) do
		{
			if (event_var(es_userdead) = 0) do
			{
				es playerget cash wcs_tmp1 event_var(attacker)
				if (server_var(wcs_tmp1) < server_var(wcs_money)) do
				{
					es_tell event_var(userid) #multi #green [WCS]: #lightgreen Steal - Failed, enemy do not have enough cash
				}
				if (server_var(wcs_tmp1) => server_var(wcs_money)) do
				{
					es wcs_setfx cash event_var(userid) - server_var(wcs_money) 0
					es wcs_setfx cash event_var(attacker) + server_var(wcs_money) 0
					es_tell event_var(userid) #multi #green [WCS]: #lightgreen Steal - event_var(es_attackername) stole server_var(wcs_money) from you!
					es_tell event_var(attacker) #multi #green [WCS]: #lightgreen Steal - You've stolen server_var(wcs_money) from event_var(es_username)!
					es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(attacker)
					es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(userid)
					es_xmath wcs_z1 + 20
					es_xmath wcs_z2 + 20
					es est_effect 3 #a 0 sprites/yellowglow1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 0.7 10 10 100 255 248 255
					es est_effect 3 #a 0 effects/tp_eyefx/tpeye.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 0.7 15 15 100 255 248 255
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 1 (END)
	}
}

block bomb
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 2 (START)
	}
	if (server_var(wcs_dice2) <= server_var(wcs_chance)) do
	{
		es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
		es_xmath wcs_z1 + 35
		es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
		es est_effect_20 #a 0 sprites/lgtning.vmt server_var(vector1) 1 10 5 200 10 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) metal
		ifx true(wcs_ffa_enabled) do
		{
			es_xset wcs_targetteam "#alive"
			es_getlivingplayercount wcs_pcount
		}
		ifx false(wcs_ffa_enabled) do
		{
			es_getplayerteam wcs_team event_var(userid)
			if (server_var(wcs_team) = 2) do
			{
				es_xset wcs_targetteam "#ct,#alive"
				es_getlivingplayercount wcs_pcount 3
			}	
			if (server_var(wcs_team) = 3) do
			{
				es_xset wcs_targetteam "#t,#alive"
				es_getlivingplayercount wcs_pcount 2
			}
		}
		if (server_var(wcs_targetteam) != 0) do
		{	
			if (server_var(wcs_pcount) > 0) do
			{
				es_xset wcs_counter 0
				es_xset wcs_initial_players_struck 0
				es_xset wcs_count_players_ultimate_immunity 0
				es_xset wcs_count_players_actually_affected 0
				es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
				es wcs_nearcoord wcs_targetid server_var(wcs_targetteam) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_radius) "es_xdoblock wcs/tools/manifest/diablo/wcs_ulti_suicide_checks"
				if (server_var(wcs_execute_ultimate) == 1) do
				{
					//No matter how many targets are affected, this section will only be executed once.
					//If you have a global counter you wish to retrieve then use this section, also good for general mesasges or commands you only want to happen on the wcs_userid / event_var(userid)
					
					es wcs_centertell event_var(userid) The Explosion damaged server_var(wcs_count_players_actually_affected) enemies for server_var(wcs_magnitude) damage
					es_tell event_var(userid) #multi #green [WCS]: #lightgreen The explosion affected server_var(wcs_count_players_actually_affected) enemies
					es_xrand wcs_rand 1 3
					if (server_var(wcs_rand) == 1) do
					{
						es_playsound event_var(userid) weapons\hegrenade\explode5.wav .7
					}
					if (server_var(wcs_rand) == 2) do
					{
						es_playsound event_var(userid) weapons\hegrenade\explode4.wav .8
					}
					if (server_var(wcs_rand) == 3) do
					{
						es_playsound event_var(userid) weapons\hegrenade\explode3.wav .7
					}
				}
			}
			else do
			{
				es_tell event_var(userid) #multi #green [WCS]: #lightgreen The Explosion - Failed, there are no living enemies!
			}
			if (server_var(wcs_counter) = 0) do
			{
				es_tell event_var(userid) #multi #green [WCS]: #lightgreen The Explosion - Failed, no nearby enemies!
			}
		}
		else do
		{
			es_tell event_var(userid) #multi #green [WCS]: #lightgreen The Explosion - Could not target an enemy team
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 2 (END)
	}
}

block wcs_ulti_suicide_checks 
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 2 (CHECKS START)
	}
	es_exists ex userid server_var(wcs_targetid)
	if (server_var(ex) = 1) do
	{
		es getplayerinfo wcs_alive server_var(wcs_targetid) isdead
		if (server_var(wcs_alive) = 0) do
		{
			es_xmath wcs_counter + 1
			if (server_var(wcs_counter) > 0) do
			{
				if (server_var(wcs_counter) <= 20) do
				{
					es_set wcs_initial_players_struck server_var(wcs_counter)
					es wcsgroup get ulti_immunity wcs_tmp server_var(wcs_targetid)
					if (server_var(wcs_tmp) != 1) do
					{
						es_xset wcs_execute_ultimate 1
						es_xmath wcs_count_players_actually_affected + 1
						es_xdoblock wcs/tools/manifest/diablo/wcs_ulti_suicide_final
					}
					if (server_var(wcs_tmp) == 1) do
					{
						es_xmath wcs_count_players_ultimate_immunity + 1
						if (server_var(wcs_count_players_ultimate_immunity) != server_var(wcs_initial_players_struck)) do
						{
							es_tell server_var(wcs_targetid) #multi #green [WCS]: #lightgreen Ultimate immunity - You blocked an enemy's explosion
							es_tell event_var(userid) #multi #green [WCS]: #lightgreen The Explosion - server_var(wcs_count_players_ultimate_immunity) enemies were immune to your ultimate!
						}
						if (server_var(wcs_count_players_ultimate_immunity) == server_var(wcs_initial_players_struck)) do
						{
							es_tell event_var(userid) #multi #green [WCS]: #lightgreen The Explosion - Failed, all nearby enemy targets were immune!
						}
					}
				}
				else do
				{
					es_tell event_var(userid) #multi #green [WCS]: #lightgreen The Explosion - Failed, you can't hit that many targets at once!
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 2 (CHECKS END)
	}
}

block wcs_ulti_suicide_final
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 2 (EXECUTED START)
	}
	es wcs_centertell server_var(wcs_targetid) You took server_var(wcs_magnitude) damage from an Explosion
	es_xrand wcs_rand 1 3
	if (server_var(wcs_rand) == 1) do
	{
		es_playsound server_var(wcs_targetid) weapons\hegrenade\explode5.wav .7
	}
	if (server_var(wcs_rand) == 2) do
	{
		es_playsound server_var(wcs_targetid) weapons\hegrenade\explode4.wav .8
	}
	if (server_var(wcs_rand) == 3) do
	{
		es_playsound server_var(wcs_targetid) weapons\hegrenade\explode3.wav .7
	}
	es damage server_var(wcs_targetid) server_var(wcs_magnitude) 1 event_var(userid)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 2 (EXECUTED END)
	}
}

block push
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 3 (START)
	}
	if (server_var(wcs_dice3) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcs_pushed event_var(userid) 0 0 400
				es_tell event_var(attacker) #multi #green [WCS]: #lightgreen Push - You pushed your enemy
				es_tell event_var(userid) #multi #green [WCS]: #lightgreen Push - You got pushed by an enemy
				es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(attacker)
				es est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .1 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .1 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .2 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .2 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .3 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .3 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .4 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .4 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .5 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .5 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .6 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .6 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
				es_xmath wcs_z2 + 10
				es_delayed .7 est_effect 10 #a 0 effects/gunshiptracer.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 225 22
				es_delayed .7 est_effect 10 #a 0 effects/bluespark.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 40 100 .7 10 10 0 0 255 255 120 11
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 3 (END)
	}
}

block burn
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 4 (START)
	}
	if (server_var(wcs_dice4) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcsgroup get is_burning wcs_tmp3 event_var(userid)
				ifx false(wcs_tmp3) do
				{
					es wcsgroup set is_burning event_var(userid) 1
					es_delayed 2 wcsgroup set is_burning event_var(userid) 0
					es wcsgroup set fire_owner event_var(userid) event_var(attacker)
					es wcs_setfx burn event_var(userid) = 1 2
					es_tell event_var(userid) #multi #green [WCS]: #lightgreen Burn - You were set on fire for 2 seconds
					es_tell event_var(attacker) #multi #green [WCS]: #lightgreen Burn - You set your opponent on fire for 2 seconds
					es_playsound event_var(userid) wcs/firecast.mp3 .9
					es_playsound event_var(attacker) wcs/firecast.mp3 .7
					es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(userid)
					es_xmath wcs_z2 + 10
					es est_effect 10 #a 0 sprites/fire1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 50 200 1 40 10 0 255 255 255 255 8
					es_xmath wcs_z2 + 30
					es est_effect 10 #a 0 sprites/fire1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 50 200 1 20 10 0 255 255 255 255 8
					es_xmath wcs_z2 + 40
					es est_effect 11 #a 0 sprites/fire1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 1 1 255
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 4 (END)
	}
}

block teleport
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 5 (START)
	}
	es_xset wcs_range 1250
    es_xset wcs_ok 1

    es playerget viewcoord server_var(wcs_userid) wcs_x1 wcs_y1 wcs_z1
    es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_userid)
    es_xmath wcs_z2 + 25
    es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
    es est_effect 7 #a 0 sprites/smoke.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 25 10
    es est_effect_14 #a 0 effects/strider_muzzle.vmt server_var(vector2) server_var(vector2) 50 50 47
    es est_effect 11 #a 0 effects/strider_muzzle.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) .4 1 160
    es est_effect_08 #a 0 effects/strider_muzzle.vmt server_var(vector2) 80 85 .5 .5 60 10 0 255 255 255 255 8 5
    es_xmath wcs_z2 - 25

    es_xcopy wcs_x wcs_x1
    es_xcopy wcs_y wcs_y1
    es_xcopy wcs_z wcs_z1

    es_math wcs_x - server_var(wcs_x2)
    es_math wcs_y - server_var(wcs_y2)
    es_math wcs_z - server_var(wcs_z2)

    if (server_var(wcs_x) < 0) then es_xmath wcs_x * -1
    if (server_var(wcs_y) < 0) then es_xmath wcs_y * -1
    if (server_var(wcs_z) < 0) then es_xmath wcs_z * -1

    if (server_var(wcs_range) < server_var(wcs_x)) do
    {
		es_xset wcs_ok 0
    }
    if (server_var(wcs_range) < server_var(wcs_y)) do
    {
		es_xset wcs_ok 0
    }
    if (server_var(wcs_range) < server_var(wcs_z)) do
    {
		es_xset wcs_ok 0
    }
    
    ifx true(wcs_ok) do
    {
 	    ifx true(wcs_legacy_teleport_fade) do
	    {
	    	es wcs_fade server_var(wcs_userid) 65 255 30 50 1 1
	    }
 	    ifx true(wcs_legacy_teleport_type) do
	    {
	    	//To Do: Improve this by finding an alternative teleportation method that prevent players from getting stuck in displacemnts and models
	    	es playerset location server_var(wcs_userid) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	    	es_delayed .01 wcs_teleport server_var(wcs_userid) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	    }
	    ifx false(wcs_legacy_teleport_type) do
	    {
	    	es_setplayerprop server_var(wcs_userid) CBasePlayer.localdata.m_vecBaseVelocity 0,0,250
	        es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	        es_delayed .01 wcs_pushto server_var(wcs_userid) server_var(vector1) 2
	    }
        es_tell server_var(wcs_userid) #multi #green [WCS]: #lightgreenTeleport - You Teleported!
        es_playsound server_var(wcs_userid) wcs/teleport.mp3 1
    }
    
    else do
    {
        if (server_var(wcs_range) < server_var(wcs_x)) do
        {
            if (server_var(wcs_x2) >= 0) do
            {
                if (server_var(wcs_x1) >= 0) do
                {
                    if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
                    if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_x2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_x1) < 0) do
                {
                    if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
                    if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_x2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_x1 wcs_x2
        }
        
        if (server_var(wcs_range) < server_var(wcs_y)) do
        {
            if (server_var(wcs_y2) >= 0) do
            {
                if (server_var(wcs_y1) >= 0) do
                {
                    if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
                    if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_y2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_y1) < 0) do
                {
                    if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
                    if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_y2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_y1 wcs_y2
        }
        
        if (server_var(wcs_range) < server_var(wcs_z)) do
        {
            if (server_var(wcs_z2) >= 0) do
            {
                if (server_var(wcs_z1) >= 0) do
                {
                    if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
                    if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_z2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_z1) < 0) do
                {
                    if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
                    if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_z2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_z1 wcs_z2
        }

	    ifx false(wcs_legacy_teleport_type) do
	    {
	        es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	        es_delayed .01 wcs_pushto server_var(wcs_userid) server_var(vector1) .1
	    }
 	    ifx true(wcs_legacy_teleport_fade) do
	    {
	    	es wcs_fade server_var(wcs_userid) 65 255 30 50 1 1
	    }
        es_tell server_var(wcs_userid) #multi #green [WCS]: #lightgreenTeleport - You cannot teleport that far!
	    es wcs_setcooldown server_var(wcs_userid) 0
    }
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Diablo - [Block] Skill: 5 (END)
	}
}