//////////////////////
//Kamiqawa Race Pack//
//Version 1.1.0A    //
//////////////////////

block slow
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 1 (START)
	}
	if (server_var(wcs_dice) <= 20) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcsgroup get is_slowed wcs_tmp3 event_var(userid)
				if (server_var(wcs_tmp3) == 0) do
				{
					es wcsgroup set is_slowed event_var(userid) 1
					es_delayed server_var(wcs_duration) wcsgroup set is_slowed event_var(userid) 0
					es wcs_setfx speed event_var(userid) = .85 server_var(wcs_duration)
					es_tell event_var(userid) #multi #green [WCS]#lightgreen Chains of ice - Slowed you for server_var(wcs_duration) seconds 
					es_tell event_var(attacker) #multi #green [WCS]#lightgreen Chains of ice - Slowed your enemy for server_var(wcs_duration) seconds
					es_playsound event_var(attacker) skills/frostbolt.mp3 .6
					es_playsound event_var(userid) skills/frostbolt.mp3 .9
					es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
					es_xmath wcs_z1 + 15
					es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 401 200 .75 80 10 .4 64 0 64 255 2
					es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 401 200 .75 50 10 .4 160 160 160 150 4
					es_xmath wcs_z1 + 30
					es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 401 100 .75 80 10 .4 64 0 64 255 2
					es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 401 100 .75 50 10 .4 160 160 160 150 4
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 1 (END)
	}
}


block damage
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 2 (START)
	}
	if (event_var(es_userdead) = 0) do
	{
		if (event_var(es_attackerdead) = 0) do
		{
			es damage event_var(userid) server_var(wcs_rand) 1 event_var(attacker)
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 2 (END)
	}
}

block leech
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 3 (START)
	}
	if (server_var(wcs_dice3) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es_playsound event_var(attacker) wcs/vampiricstrike.mp3 .9
				es_playsound event_var(userid) wcs/vampiricstrike.mp3 .7
				es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
				es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(attacker)
				es_xmath wcs_z1 + 20
				es_xmath wcs_z2 + 20
				es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
				es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
				es est_effect_06 #a 0 sprites/lgtning.vmt server_var(vector2) server_var(vector1) 5 1 15 15 0 .2 128 0 0 175 15
				es est_effect_06 #a 0 effects/blueflare1.vmt server_var(vector2) server_var(vector1) 5 1 30 30 0 0 180 0 0 255 20
				es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 155 65 1 30 10 0 128 0 0 175 15
				es est_effect 10 #a 0 sprites/blueflare1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 155 65 1 20 10 0 180 0 0 255 20
				es playerget health wcs_tmp2 event_var(attacker)
				if (server_var(wcs_tmp2) < 260) do
				{
					es_xrand wcs_addhealth 12 20
					es wcs_setfx health event_var(attacker) + server_var(wcs_addhealth) 0
					es wcs_centertell event_var(attacker) Leeched server_var(wcs_addhealth) health!
				}
				if (server_var(wcs_tmp2) => 260) do
				{
					es wcs_setfx health event_var(attacker) = 260 0
					es wcs_centertell event_var(attacker) You have reached the 260 health cap!
				}		
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 3 (END)
	}
}

block decay
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 4 (START)
	}
	es_xset wcs_execute_ultimate 0
	ifx true(wcs_ffa_enabled) do
	{
		es_xset wcs_targetteam "#alive"
		es_getlivingplayercount wcs_pcount
		es_set wcs_ffa_userid server_var(wcs_userid)
	}
	ifx false(wcs_ffa_enabled) do
	{
		es_getplayerteam wcs_team server_var(wcs_userid)
		if (server_var(wcs_team) = 2) do
		{
			es_xset wcs_targetteam "#ct,#alive"
			es_getlivingplayercount wcs_pcount 3
		}
		if (server_var(wcs_team) = 3) do
		{
			es_xset wcs_targetteam "#t,#alive"
			es_getlivingplayercount wcs_pcount 2
		}
	}
	if (server_var(wcs_targetteam) != 0) do
	{	
		if (server_var(wcs_pcount) > 0) do
		{
			es_xset wcs_counter 0
			es_xset wcs_initial_players_struck 0
			es_xset wcs_count_players_ultimate_immunity 0
			es_xset wcs_count_players_actually_affected 0
			es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_userid)
			es wcs_nearcoord wcs_targetid server_var(wcs_targetteam) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 325 "es_xdoblock wcs/tools/manifest/wow_deathknight/ultimate_checks"
			if (server_var(wcs_execute_ultimate) == 1) do
			{
				es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Death and decay - Dealt server_var(wcs_rand) damage to server_var(wcs_count_players_actually_affected) enemies
				es wcs_centertell server_var(wcs_userid) Death and Decay emits from you affecting server_var(wcs_count_players_actually_affected) enemies and dealt server_var(wcs_rand) damage
				es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_userid)
				es_xmath wcs_z1 + 5
				es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 101 100 2.5 70 10 .1 255 0 10 150 2
				es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 151 150 2.5 50 10 .4 255 0 15 150 4
				es est_effect 10 #a 0 sprites/purplelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 201 200 2.5 80 10 .2 255 0 30 255 2
				es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 251 250 2.5 50 10 .4 255 0 20 150 4
				es est_effect 10 #a 0 sprites/purplelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 301 300 2.5 80 10 .2 255 0 10 255 2
				es est_effect 10 #a 0 sprites/bluelight1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 301 350 2.5 50 10 .4 255 0 25 150 4
			}
		}
		else do
		{
			es_xset wcs_ultinotexec 1
			es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, there are no living enemies!
		}
		if (server_var(wcs_counter) = 0) do
		{
			es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, no nearby enemies!
			es_xset wcs_ultinotexec 1
		}
	}
	else do
	{
		es_xset wcs_ultinotexec 1
		es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Could not target an enemy team
	}
	if (server_var(wcs_ultinotexec) = 1) then es wcs_cancelulti server_var(wcs_userid)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 4 (END)
	}
}

block ultimate_checks 
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 4 (CHECKS START)
	}
	ifx true(wcs_ffa_enabled) do
	{
		es_xset wcs_execute_ultimate_ffa 1
		if (server_var(wcs_targetid) != server_var(wcs_ffa_userid)) do
		{
			es_xset wcs_execute_ultimate_ffa 0
		}
	}
	ifx false(wcs_execute_ultimate_ffa) do
	{
		es_exists ex userid server_var(wcs_targetid)
		if (server_var(ex) = 1) do
		{
			es getplayerinfo wcs_alive server_var(wcs_targetid) isdead
			if (server_var(wcs_alive) = 0) do
			{
				es_xmath wcs_counter + 1
				if (server_var(wcs_counter) > 0) do
				{
					if (server_var(wcs_counter) <= 20) do
					{
						es_set wcs_initial_players_struck server_var(wcs_counter)
						es wcsgroup get ulti_immunity wcs_tmp server_var(wcs_targetid)
						if (server_var(wcs_tmp) != 1) do
						{
							es_xset wcs_ultinotexec 0
							es_xset wcs_execute_ultimate 1
							es_xmath wcs_count_players_actually_affected + 1
							es_xdoblock wcs/tools/manifest/wow_deathknight/ultimate_final
						}
						if (server_var(wcs_tmp) == 1) do
						{
							es_xmath wcs_count_players_ultimate_immunity + 1
							if (server_var(wcs_count_players_ultimate_immunity) != server_var(wcs_initial_players_struck)) do
							{
								es_tell server_var(wcs_targetid) #multi #green [WCS]#lightgreen Ultimate immunity - You blocked an enemy's ultimate
								es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - server_var(wcs_count_players_ultimate_immunity) enemies were immune to your ultimate!
							}
							if (server_var(wcs_count_players_ultimate_immunity) == server_var(wcs_initial_players_struck)) do
							{
								es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, all nearby enemy targets were immune!
								es_xset wcs_ultinotexec 1
							}
						}
					}
					else do
					{
						es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, you can't hit that many targets at once!
						es_xset wcs_ultinotexec 1
					}
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 4 (CHECKS END)
	}
}

block ultimate_final
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 4 (EXECUTED START)
	}
	es_xrand wcs_rand 5 35
	es_tell server_var(wcs_targetid) #multi #green [WCS]#lightgreen Death and decay - You took server_var(wcs_rand) damage from death and decay
	es damage server_var(wcs_targetid) server_var(wcs_rand) 1 server_var(wcs_userid)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Death Knight - [Block] Skill: 4 (EXECUTED END)
	}
}
