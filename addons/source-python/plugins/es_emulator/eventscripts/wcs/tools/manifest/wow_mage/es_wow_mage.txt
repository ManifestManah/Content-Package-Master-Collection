//////////////////////
//Kamiqawa Race Pack//
//Version 1.0.1D    //
//////////////////////

block spawn
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Spawn (START)
	}
	es wcsgroup set wow_frostbolt event_var(userid) 1
	es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
	es_xmath wcs_z1 + 75
	es est_effect 10 #a 0 effects/bluelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 400 .8 10 10 0 255 255 255 255 3
	es_xmath wcs_z1 - 5
	es_delayed .1 est_effect 10 #a 0 effects/bluemuzzle.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 400 .8 10 10 0 100 100 255 220 5
	es_xmath wcs_z1 - 20
	es_delayed .2 est_effect 10 #a 0 effects/bluelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 400 .8 10 10 0 255 255 255 255 3
	es_xmath wcs_z1 - 5
	es_delayed .3 est_effect 10 #a 0 effects/bluemuzzle.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 400 .8 10 10 0 100 100 255 220 5
	es_xmath wcs_z1 - 20
	es_delayed .4 est_effect 10 #a 0 effects/bluelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 400 .8 10 10 0 255 255 255 255 3
	es_xmath wcs_z1 - 5
	es_delayed .5 est_effect 10 #a 0 effects/bluemuzzle.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 400 .8 10 10 0 100 100 255 220 5	
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Spawn (END)
	}
}

block death
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Death (START)
	}
	es wcsgroup set wow_frostbolt event_var(userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Death (END)
	}
}

block onchange
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] OnChange (START)
	}
	es wcsgroup set wow_frostbolt server_var(wcs_userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] OnChange (END)
	}
}

block frostbolt
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 1 (START)
	}
	es wcsgroup get wow_frostbolt wcs_tmp3 event_var(attacker)
	if (server_var(wcs_tmp3) == 2) do
	{
		es_xset wcs_chance + 20
	}
	if (server_var(wcs_dice) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
					es_xrand wcs_dmg 6 11
					es damage event_var(userid) server_var(wcs_dmg) 1 event_var(attacker)
					es wcs_centertell event_var(attacker) Frostbolt dealt + server_var(wcs_dmg) damage
					es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
					es_xrand wcs_rand 1 3
					if (server_var(wcs_rand) == 1) do
					{
						es_xmath wcs_z1 + 5
						es est_effect 10 #a 0 effects/bluemuzzle.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 35 150 2 20 10 0 80 80 220 255 6
						es est_effect 10 #a 0 effects/bluelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 35 150 2 8 10 0 80 80 220 255 4
						es_xmath wcs_z1 + 10
						es est_effect 10 #a 0 effects/bluelaser1.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 35 150 2 8 10 0 80 80 220 255 6
						es wcsgroup get is_frozen wcs_tmp4 event_var(userid)
						if (server_var(wcs_tmp4) == 0) do
						{
							es wcsgroup set is_frozen event_var(userid) 1
							es wcsgroup set is_already_colored event_var(userid) 1
							es wcs_setfx freeze event_var(userid) = 1 2
							es wcs_getcolors event_var(userid) wcs_red wcs_green wcs_blue wcs_alpha
							es wcs_color event_var(userid) 70 70 255 255 0
							es_delayed 2 wcsgroup set is_already_colored event_var(userid) 0
							es_delayed 2 wcsgroup set is_frozen event_var(userid) 0
							es_delayed 2 wcs_color event_var(userid) server_var(wcs_red) server_var(wcs_green) server_var(wcs_blue) server_var(wcs_alpha)
							es wcs_centertell event_var(userid) Frostbolt froze you and turned you blue
							es wcs_centertell event_var(attacker) Frostbolt dealt + server_var(wcs_dmg) damage and froze your target
						}
					}
					else do
					{
						es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(attacker)
						es_xmath wcs_z1 + 20
						es_xmath wcs_z2 + 20
						es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
						es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
						es est_effect_06 #a 0 sprites/strider_bluebeam.vmt server_var(vector1) server_var(vector2) 5 .75 16 16 0 0 100 100 255 240 100
						es est_effect_06 #a 0 sprites/glow1.vmt server_var(vector1) server_var(vector2) 5 .75 10 10 0 0 70 70 200 255 100
					}
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 1 (END)
	}
}

block regen
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 2 (START)
	}
	es_xrand wcs_duration 5 8
	es wcs_regeneration event_var(userid) 3 server_var(wcs_duration) 175 1000 1
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Conjure food - When below 175 health you'll start regenerating health
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 2 (END)
	}
}

block freeze
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 3 (START)
	}
	if (server_var(wcs_dice3) <= server_var(wcs_chance)) do
	{
		es_delayed .2 wcsgroup set wow_frostbolt event_var(userid) 2
		es_tell event_var(userid) #multi #green [WCS]#lightgreen Freeze - Increased your chance to cast a frostbolt by 20%
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 3 (END)
	}
}

block teleport
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 4 (START)
	}
	es_xset wcs_range 1150
    es_xset wcs_ok 1

    es playerget viewcoord server_var(wcs_userid) wcs_x1 wcs_y1 wcs_z1
    es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_userid)
    es_xmath wcs_z2 + 25
    es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
    es est_effect 7 #a 0 sprites/smoke.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 25 10
    es est_effect_14 #a 0 effects/strider_muzzle.vmt server_var(vector2) server_var(vector2) 50 50 47
    es est_effect 11 #a 0 effects/strider_muzzle.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) .4 1 160
    es est_effect_08 #a 0 effects/strider_muzzle.vmt server_var(vector2) 80 85 .5 .5 60 10 0 255 255 255 255 8 5
    es_xmath wcs_z2 - 25

    es_xcopy wcs_x wcs_x1
    es_xcopy wcs_y wcs_y1
    es_xcopy wcs_z wcs_z1

    es_math wcs_x - server_var(wcs_x2)
    es_math wcs_y - server_var(wcs_y2)
    es_math wcs_z - server_var(wcs_z2)

    if (server_var(wcs_x) < 0) then es_xmath wcs_x * -1
    if (server_var(wcs_y) < 0) then es_xmath wcs_y * -1
    if (server_var(wcs_z) < 0) then es_xmath wcs_z * -1

    if (server_var(wcs_range) < server_var(wcs_x)) do
    {
		es_xset wcs_ok 0
    }
    if (server_var(wcs_range) < server_var(wcs_y)) do
    {
		es_xset wcs_ok 0
    }
    if (server_var(wcs_range) < server_var(wcs_z)) do
    {
		es_xset wcs_ok 0
    }
    
    ifx true(wcs_ok) do
    {
 	    ifx true(wcs_legacy_teleport_fade) do
	    {
	    	es wcs_fade server_var(wcs_userid) 65 255 30 50 1 1
	    }
 	    ifx true(wcs_legacy_teleport_type) do
	    {
	    	//To Do: Improve this by finding an alternative teleportation method that prevent players from getting stuck in displacemnts and models
	    	es playerset location server_var(wcs_userid) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	    	es_delayed .01 wcs_teleport server_var(wcs_userid) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	    }
	    ifx false(wcs_legacy_teleport_type) do
	    {
	    	es_setplayerprop server_var(wcs_userid) CBasePlayer.localdata.m_vecBaseVelocity 0,0,250
	        es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	        es_delayed .01 wcs_pushto server_var(wcs_userid) server_var(vector1) 2
	    }
        es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreenTeleport - You Teleported!
        es_playsound server_var(wcs_userid) wcs/teleport.mp3 1
    }
    
    else do
    {
        if (server_var(wcs_range) < server_var(wcs_x)) do
        {
            if (server_var(wcs_x2) >= 0) do
            {
                if (server_var(wcs_x1) >= 0) do
                {
                    if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
                    if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_x2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_x1) < 0) do
                {
                    if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
                    if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_x2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_x1 wcs_x2
        }
        
        if (server_var(wcs_range) < server_var(wcs_y)) do
        {
            if (server_var(wcs_y2) >= 0) do
            {
                if (server_var(wcs_y1) >= 0) do
                {
                    if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
                    if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_y2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_y1) < 0) do
                {
                    if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
                    if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_y2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_y1 wcs_y2
        }
        
        if (server_var(wcs_range) < server_var(wcs_z)) do
        {
            if (server_var(wcs_z2) >= 0) do
            {
                if (server_var(wcs_z1) >= 0) do
                {
                    if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
                    if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_z2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_z1) < 0) do
                {
                    if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
                    if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_z2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_z1 wcs_z2
        }
	    ifx false(wcs_legacy_teleport_type) do
	    {
	        es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	        es_delayed .01 wcs_pushto server_var(wcs_userid) server_var(vector1) .1
	    }
 	    ifx true(wcs_legacy_teleport_fade) do
	    {
	    	es wcs_fade server_var(wcs_userid) 65 255 30 50 1 1
	    }
        es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreenTeleport - You cannot teleport that far!
	    es wcs_setcooldown server_var(wcs_userid) 0
    }
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: WoW - Mage - [Block] Skill: 4 (END)
	}
}
