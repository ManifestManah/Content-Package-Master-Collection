//////////////////////
//Manifest Race Pack//
//Version 1.0.1B    //
//////////////////////

block spawn
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Spawn (START)
	}
	es wcsgroup set greenarrow_shroud event_var(userid) 0
	es wcsgroup set greenarrow_explosive event_var(userid) 0
	es wcs_setfx noscope event_var(userid) = 1 0
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Oliver Queen - The Green Arrow - You cannot scope while playing as The Oliver Queen - The Green Arrow
	es_getgame wcs_gamecheck
	if ("Counter-Strike: Source" in server_var(wcs_gamecheck)) do
	{
		es wcs_restrict event_var(userid) "smokegrenade;flashbang;hegrenade;knife;glock;usp;p228;deagle;elite;fiveseven;m3;xm1014;mac10;tmp;mp5navy;ump45;p90;galil;famas;ak47;m4a1;aug;sg550;awp;sg552;g3sg1;m249"
		es_give event_var(userid) weapon_scout
	}
	if ("Counter-Strike: Global Offensive" in server_var(wcs_gamecheck)) do
	{
		es wcs_restrict event_var(userid) "smokegrenade;flashbang;hegrenade;molotov;decoy;incgrenade;knife;glock;usp_silencer;p250;cz75a;hkp2000;elite;fiveseven;deagle;revolver;tec9;taser;sawedoff;nova;xm1014;mag7;p90;cz75a;mp9;mp7;mp5sd;bizon;mac10;ump45;m4a1;m4a1_silencer;galilar;ak47;aug;famas;g3sg1;scar20;awp;sg556;m249;negev"
		es_give event_var(userid) weapon_ssg08
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Spawn (END)
	}
}

block death
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Death (START)
	}
	es wcsgroup set greenarrow_shroud event_var(userid) 0
	es wcsgroup set greenarrow_explosive event_var(userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Death (END)
	}
}

block onchange
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] OnChange (START)
	}
	es wcsgroup set greenarrow_shroud server_var(wcs_userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] OnChange (END)
	}
}

block damage
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 1 (START)
	}
	es damage event_var(userid) 27 0 event_var(attacker)
	es_tell event_var(attacker) #multi #green [WCS]#lightgreen Archery skills - Increased the damage dealt by 27
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 1 (END)
	}
}

block longjump
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 2 (START)
	}
	es wcs_setfx longjump event_var(userid) + server_var(wcs_multiplier) 0
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Shroud of the night - You jump further, and briefly become invisible when jumping
	es wcsgroup set greenarrow_shroud event_var(userid) 2
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 2 (END)
	}
}

event player_jump
{
	es wcsgroup get greenarrow_shroud wcs_tmp4 event_var(userid)
	if (server_var(wcs_tmp4) == 2) do
	{
		ifx true(wcs_race_debugging) do
		{
			wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Event Player_Jump (START)
		}
		es wcsgroup set greenarrow_shroud event_var(userid) 1
		es_delayed 3 wcsgroup set greenarrow_shroud event_var(userid) 2
		es wcs_color event_var(userid) 255 255 255 0 1
		es_delayed .5 wcs_color event_var(userid) 255 255 255 255 1
		es wcs_centertell event_var(userid) Shroud of the night briefly turned you invisible
		es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
		es_xmath wcs_z1 + 20
		es est_effect 7 #a 0 sprites/smoke.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 25 10
		ifx true(wcs_race_debugging) do
		{
			wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Event Player_Jump (END)
		}
	}
}

block speed
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 3 (START)
	}
	es wcs_setfx speed event_var(userid) = server_var(wcs_speed) 0
	es_xmath wcs_speed * 100
	es_xmath wcs_speed - 100
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Haste and arrows - You gained server_var(wcs_speed)% speed and 5% chance to use explosive arrows
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 3 (END)
	}
}

block health
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 4 (START)
	}
	es_delayed .2 wcs_setfx health event_var(userid) + server_var(wcs_addhealth) 0
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Stamina - Increased your health by server_var(wcs_addhealth)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 4 (END)
	}
}

block hook
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 5 (START)
	}
	es_getgame wcs_gamecheck
	if ("Counter-Strike: Source" in server_var(wcs_gamecheck)) do
	{
		es_playsound server_var(wcs_userid) weapons/357/357_spin1.wav .8
	}
	if ("Counter-Strike: Global Offensive" in server_var(wcs_gamecheck)) do
	{
		es_playsound server_var(wcs_userid) weapons\fx\nearmiss\bulletltor01.wav .5
	}
	es_xset wcs_range 5000
	es playerget viewcoord server_var(wcs_userid) wcs_x1 wcs_y1 wcs_z1
	es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_userid)
	es_xmath wcs_z2 + 25
	es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
	es est_effect_06 #a 0 cs_havana/metalgear001a.vmt server_var(vector1) server_var(vector2) 5 .5 4 4 0 0 255 255 255 100 60
	es est_effect_06 #a 0 sprites/laser.vmt server_var(vector1) server_var(vector2) 5 .5 14 14 0 0 80 220 80 220 60
	es_xset wcs_ok 1
	es playerget viewcoord server_var(wcs_userid) wcs_x1 wcs_y1 wcs_z1
	es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_userid)
	es_xcopy wcs_x wcs_x1
	es_xcopy wcs_y wcs_y1
	es_xcopy wcs_z wcs_z1
	es_math wcs_x - server_var(wcs_x2)
	es_math wcs_y - server_var(wcs_y2)
	es_math wcs_z - server_var(wcs_z2)
	if (server_var(wcs_x) < 0) then es_xmath wcs_x * -1
	if (server_var(wcs_y) < 0) then es_xmath wcs_y * -1
	if (server_var(wcs_z) < 0) then es_xmath wcs_z * -1
	ifx parse("(wcs_range < wcs_x) or (wcs_range < wcs_y) or (wcs_range < wcs_z)") do
	{
		es_xset wcs_ok 0
	}
	ifx true(wcs_ok) do
	{
		es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
		es wcs_pushto server_var(wcs_userid) server_var(vector1) 1.8
	}
	es_xelse do
	{
		if (server_var(wcs_range) < server_var(wcs_x)) do
		{
			if (server_var(wcs_x2) >= 0) do
			{
				if (server_var(wcs_x1) >= 0) do
				{
					if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
					if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
				}
				es_xelse do
				{
					es_math wcs_x2 - server_var(wcs_range)
				}
			}
			es_xelse do
			{
				if (server_var(wcs_x1) < 0) do
				{
					if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
					if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
				}	
				es_xelse do
				{
					es_math wcs_x2 + server_var(wcs_range)
				}
			}
			es_xcopy wcs_x1 wcs_x2
		}
		if (server_var(wcs_range) < server_var(wcs_y)) do
		{
			if (server_var(wcs_y2) >= 0) do
			{
				if (server_var(wcs_y1) >= 0) do
				{
					if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
					if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
				}
				es_xelse do
				{
					es_math wcs_y2 - server_var(wcs_range)
				}
			}
			es_xelse do
			{
				if (server_var(wcs_y1) < 0) do
				{
					if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
					if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
				}
				es_xelse do
				{
					es_math wcs_y2 + server_var(wcs_range)
				}
			}
			es_xcopy wcs_y1 wcs_y2
		}
		if (server_var(wcs_range) < server_var(wcs_z)) do
		{
			if (server_var(wcs_z2) >= 0) do
			{
				if (server_var(wcs_z1) >= 0) do
				{
					if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
					if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
				}
				es_xelse do
				{
					es_math wcs_z2 - server_var(wcs_range)
				}
			}
			es_xelse do
			{
				if (server_var(wcs_z1) < 0) do
				{
					if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
					if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
				}
				es_xelse do
				{
					es_math wcs_z2 + server_var(wcs_range)
				}
			}
			es_xcopy wcs_z1 wcs_z2
		}
		es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
		es wcs_pushto server_var(wcs_userid) server_var(vector1) 1.8
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Oliver Queen - The Green Arrow - [Block] Skill: 5 (END)
	}
}
