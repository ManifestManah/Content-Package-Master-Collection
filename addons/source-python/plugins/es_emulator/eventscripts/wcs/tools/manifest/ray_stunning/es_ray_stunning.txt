/////////////////////////
//Stormleader Race Pack//
//Version 1.0.0D       //
/////////////////////////

block spawn
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Spawn (START)
	}
	es wcsgroup set evasion event_var(userid) 0
	es wcsgroup set evasion_chance event_var(userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Spawn (END)
	}
}

block onchange
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] OnChange (START)
	}
	es wcsgroup set evasion server_var(wcs_userid) 0
	es wcsgroup set evasion_chance server_var(wcs_userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] OnChange (END)
	}
}

block levitation
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 1 (START)
	}
	es_delayed .2 wcs_setfx gravity event_var(userid) = server_var(wcs_gravity) 0
	es_xmath wcs_gravity * 100
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Levitation - Reduced your gravity to server_var(wcs_gravity)%
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 1 (END)
	}
}

block speed
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 2 (START)
	}
	es wcs_setfx speed event_var(userid) = server_var(wcs_speed) 0
	es_xmath wcs_speed * 100
	es_xmath wcs_speed - 100
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Speed - Increased your speed by server_var(wcs_speed)%
	es_delayed 1.5 es_playsound event_var(userid) wcs/speed.mp3 .8
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 2 (END)
	}
}

block evade
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 3 (START)
	}
	es wcsgroup set evasion event_var(userid) 1
	es wcsgroup set evasion_chance event_var(userid) server_var(wcs_chance)
    es wcsgroup get evasion_count wcs_tmp1 event_var(userid)
    es_tell event_var(userid) #multi #green [WCS]#lightgreen Evasion - You evaded server_var(wcs_tmp1) attacks last round
	es_tell event_var(userid) #multi #green [WCS]#lightgreen Evasion - Gives you server_var(wcs_chance)% chance to dodge incoming attacks
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 3 (END)
	}
}

block phoenix
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 4 (START)
	}
	ifx true(wcs_ffa_enabled) do
	{
		es wcsgroup set phoenix_ffa event_var(userid) 0
		if (server_var(wcs_dice) <= server_var(wcs_chance)) do
		{
			es_xrand wcs_rand 0 2
			ifx false(wcs_rand) do
			{
				es wcsgroup set phoenix_ffa event_var(userid) 1
				es_tell event_var(userid) #multi #green [WCS]#lightgreen Phoenix - You'll be reborn if you die during this round!
			}
		}
	}
	ifx false(wcs_ffa_enabled) do
	{
		es wcsgroup get has_used_phoenix wcs_tmp3 event_var(userid)
		if (server_var(wcs_tmp3) == 0) do
		{
			es wcsgroup set has_used_phoenix event_var(userid) 1
			if (server_var(wcs_dice) <= server_var(wcs_chance)) do
			{
				if (event_var(es_userteam) = 2) then es_xset wcs_team #t
				if (event_var(es_userteam) = 3) then es_xset wcs_team #ct
				es wcsgroup get phoenix wcs_phoenix server_var(wcs_team)
				es_xmath wcs_phoenix + 1
				es wcsgroup set phoenix server_var(wcs_team) server_var(wcs_phoenix)
				es_tell event_var(userid) #multi #green [WCS]#lightgreen Phoenix - The first from your team to die will be revived
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 4 (END)
	}
}

block freeze
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 5 (START)
	}
	if (server_var(wcs_dice5) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcsgroup get is_frozen wcs_tmp4 event_var(userid)
				if (server_var(wcs_tmp4) == 0) do
				{
					es wcsgroup set is_frozen event_var(userid) 1
					es_delayed 1 wcsgroup set is_frozen event_var(userid) 0
					es wcs_setfx freeze event_var(userid) = 1 1
					es wcs_centertell event_var(attacker) You froze event_var(es_username) for 1 second!
					es wcs_centertell event_var(userid) for event_var(es_attackername) Froze you for 1 second!
					es_playsound event_var(attacker) skills/frostbolt.mp3 .8
					es_playsound event_var(userid) skills/frostbolt.mp3 1
					es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(attacker)
					es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(userid)
					es_xmath wcs_z1 + 20
					es_xmath wcs_z2 + 20
					es est_effect 3 #a 0 sprites/cbbl_smoke.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 0.5 10 10 0 0 255 255
					es_xmath wcs_z2 + 5
					es est_effect 10 #a 0 sprites/cbbl_smoke.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 20 45 0.5 25 10 0 0 0 255 255 0
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 5 (END)
	}
}

block anti_invisibility
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 6 (START)
	}
	if (server_var(wcs_dice6) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcs_color event_var(userid) 255 255 255 255 0
				es_tell event_var(userid) #multi #green [WCS]#lightgreen Anti-Invisibility - Turned you completely visible!
				es_tell event_var(attacker) #multi #green [WCS]#lightgreen Anti-Invisibility - Made your enemy completely visible!
				es_playsound event_var(userid) wcs/tidetotem.mp3 1
				es_playsound event_var(attacker) wcs/tidetotem.mp3 .8
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Ray Stunning - [Block] Skill: 6 (END)
	}
}