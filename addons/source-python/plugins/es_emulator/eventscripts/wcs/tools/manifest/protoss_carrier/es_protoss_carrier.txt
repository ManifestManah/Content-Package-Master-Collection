////////////////////////
//Novakiller Race Pack//
//Version 1.0.1D      //
////////////////////////

block spawn
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Spawn (START)
	}
	es wcsgroup set ability_count event_var(userid) 3
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Spawn (END)
	}
}

block onchange
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] OnChange (START)
	}
	es wcsgroup set ability_count server_var(wcs_userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] OnChange (END)
	}
}

block ward
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 1 (START)
	}
	es wcsgroup get ability_count wcs_count server_var(wcs_userid)
	if (server_var(wcs_count) => 1) do
	{
		es_xmath wcs_count - 1
		es wcsgroup set ability_count server_var(wcs_userid) server_var(wcs_count)
		es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Interceptors - You have server_var(wcs_count) Interceptors left.
		es_xset wcs_warden_x2 0
		es_xset wcs_warden_y2 0
		es_xset wcs_warden_z2 0
		es_xset wcs_tmp16 0
		es_xset wcs_tmp17 5
		es_getplayerteam wcs_tmp16 server_var(wcs_userid)
		es_math wcs_tmp17 - server_var(wcs_tmp16)
		es_getplayerlocation wcs_warden_x2 wcs_warden_y2 wcs_warden_z2 server_var(wcs_userid)
		es wcs_warden server_var(wcs_userid) server_var(wcs_duration) server_var(wcs_dmg) server_var(wcs_range) server_var(wcs_tmp17) 0 server_var(wcs_warden_x2) server_var(wcs_warden_y2) server_var(wcs_warden_z2) 0
	}
	else do
	{
		es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Interceptors - You don't have any Interceptors left.
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 1 (END)
	}
}

block gravity
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 2 (START)
	}
	if (event_var(es_userdead) = 0) do
	{
		es_delayed .2 wcs_setfx gravity event_var(userid) = server_var(wcs_gravity) 0
		es_xmath wcs_gravity * 100
		es_tell event_var(userid) #multi #green [WCS]#lightgreen Gravitic thrusters - Reduced your gravity to server_var(wcs_gravity)%
		es_playsound event_var(userid) skills/hymn.mp3 .8
		es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
		es est_effect 10 #a 0 sprites/smoke.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 200 50 1 15 10 0 80 80 225 255 0
		es est_effect 10 #a 0 sprites/smoke.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 200 350 1 15 10 0 80 80 225 255 0
		es_delayed 1 est_effect 10 #a 0 sprites/smoke.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 50 200 1 15 10 0 80 80 225 255 5
		es_delayed 1 est_effect 10 #a 0 sprites/smoke.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 350 200 1 15 10 0 80 80 225 255 5
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 2 (END)
	}
}

block freeze
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 3 (START)
	}
	if (server_var(wcs_dice3) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcsgroup get is_frozen wcs_tmp4 event_var(userid)
				if (server_var(wcs_tmp4) == 0) do
				{
					es wcsgroup set is_frozen event_var(userid) 1
					es_delayed 1 wcsgroup set is_frozen event_var(userid) 0
					es wcs_setfx freeze event_var(userid) = 1 1
					es wcs_centertell event_var(attacker) Maelstrom froze event_var(es_username) for 1 second!
					es wcs_centertell event_var(userid) Maelstrom froze you for 1 second!
					es_playsound event_var(attacker) skills/frostbolt.mp3 .7
					es_playsound event_var(userid) skills/frostbolt.mp3 .9
					es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(attacker)
					es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(userid)
					es_xmath wcs_z1 + 40
					es_xmath wcs_z2 + 40
					es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
					es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
					es est_effect_06 #a 0 sprites/cbbl_smoke.vmt server_var(vector1) server_var(vector2) 1 .5 40 40 0 0 0 162 232 220 80
					es est_effect_06 #a 0 effects/blueflare1.vmt server_var(vector1) server_var(vector2) 1 .5 35 35 0 0 0 162 232 230 65
					es est_effect_08 #a 0 effects/blueflare1.vmt server_var(vector2) 20 275 1 0.5 60 10 0 0 162 232 180 4 1
					es est_effect_08 #a 0 sprites/cbbl_smoke.vmt server_var(vector2) 20 275 1 0.5 85 10 0 0 162 232 220 5 1
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 3 (END)
	}
}

block roots
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 4 (START)
	}
	es_xset wcs_execute_ultimate 0
	ifx true(wcs_ffa_enabled) do
	{
		es_xset wcs_targetteam "#alive"
		es_getlivingplayercount wcs_pcount
		es_set wcs_ffa_userid server_var(wcs_userid)
	}
	ifx false(wcs_ffa_enabled) do
	{
		es_getplayerteam wcs_team server_var(wcs_userid)
		if (server_var(wcs_team) = 2) do
		{
			es_xset wcs_targetteam "#ct,#alive"
			es_getlivingplayercount wcs_pcount 3
		}
		if (server_var(wcs_team) = 3) do
		{
			es_xset wcs_targetteam "#t,#alive"
			es_getlivingplayercount wcs_pcount 2
		}
	}
	if (server_var(wcs_targetteam) != 0) do
	{	
		if (server_var(wcs_pcount) > 0) do
		{
			es_xset wcs_counter 0
			es_xset wcs_initial_players_struck 0
			es_xset wcs_count_players_ultimate_immunity 0
			es_xset wcs_count_players_actually_affected 0
			es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_userid)
			es wcs_nearcoord wcs_targetid server_var(wcs_targetteam) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 400 "es_xdoblock wcs/tools/manifest/protoss_carrier/roots_path"
			if (server_var(wcs_execute_ultimate) == 1) do
			{
				es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Argus talisman affected server_var(wcs_counter) enemies
				es wcs_centertell server_var(wcs_userid) Argus talisman immobilized the nearby enemies!
			}
		}
		else do
		{
			es_xset wcs_ultinotexec 1
			es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, there are no living enemies!
		}
		if (server_var(wcs_counter) = 0) do
		{
			es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, no nearby enemies!
			es_xset wcs_ultinotexec 1
		}
	}
	else do
	{
		es_xset wcs_ultinotexec 1
		es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Could not target an enemy team
	}
	if (server_var(wcs_ultinotexec) = 1) then es wcs_cancelulti server_var(wcs_userid)
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 4 (END)
	}
}

block roots_path 
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 4 (CHECKS START)
	}
	ifx true(wcs_ffa_enabled) do
	{
		es_xset wcs_execute_ultimate_ffa 1
		if (server_var(wcs_targetid) != server_var(wcs_ffa_userid)) do
		{
			es_xset wcs_execute_ultimate_ffa 0
		}
	}
	ifx false(wcs_execute_ultimate_ffa) do
	{
		es_exists ex userid server_var(wcs_targetid)
		if (server_var(ex) = 1) do
		{
			es getplayerinfo wcs_alive server_var(wcs_targetid) isdead
			if (server_var(wcs_alive) = 0) do
			{
				es_xmath wcs_counter + 1
				if (server_var(wcs_counter) > 0) do
				{
					if (server_var(wcs_counter) <= 20) do
					{
						es_set wcs_initial_players_struck server_var(wcs_counter)
						es wcsgroup get ulti_immunity wcs_tmp server_var(wcs_targetid)
						if (server_var(wcs_tmp) != 1) do
						{
							es_xset wcs_ultinotexec 0
							es_xset wcs_execute_ultimate 1
							es_xmath wcs_count_players_actually_affected + 1
							es_xdoblock wcs/tools/manifest/protoss_carrier/roots_final
						}
						if (server_var(wcs_tmp) == 1) do
						{
							es_xmath wcs_count_players_ultimate_immunity + 1
							if (server_var(wcs_count_players_ultimate_immunity) != server_var(wcs_initial_players_struck)) do
							{
								es_tell server_var(wcs_targetid) #multi #green [WCS]#lightgreen Ultimate immunity - You blocked an enemy's ultimate
								es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - server_var(wcs_count_players_ultimate_immunity) enemies were immune to your ultimate!
							}
							if (server_var(wcs_count_players_ultimate_immunity) == server_var(wcs_initial_players_struck)) do
							{
								es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, all nearby enemy targets were immune!
								es_xset wcs_ultinotexec 1
							}
						}
					}
					else do
					{
						es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - Failed, you can't hit that many targets at once!
						es_xset wcs_ultinotexec 1
					}
				}
			}
		}	
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 4 (CHECKS END)
	}
}

block roots_final
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 4 (EXECUTED START)
	}
	es wcsgroup get is_frozen wcs_tmp4 server_var(wcs_targetid)
	if (server_var(wcs_tmp4) == 1) do
	{
		es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreen Ultimate - A target was already immobilized or immune to immobilizing!
	}
	if (server_var(wcs_tmp4) == 0) do
	{
		es wcsgroup set is_frozen server_var(wcs_targetid) 1
		es_delayed 2 wcsgroup set is_frozen server_var(wcs_targetid) 0
		es wcs_setfx freeze server_var(wcs_targetid) = 1 2
		es_tell server_var(wcs_targetid) #multi #green [WCS]#lightgreen Argus Talisman immobilized you for 2 seconds
		es wcs_centertell server_var(wcs_targetid) You've been immobilized for 2 seconds!
	}
	es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_userid)
	es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_targetid)
	es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 30 50 3 128 100 0 45 65 251 255 0
	es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 20 400 1 20 50 1 75 155 255 255 10
	es est_effect 3 #a 0 sprites/lgtning.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x3) server_var(wcs_y3) server_var(wcs_z3) 2 13 16 100 155 255 255
	es_xmath wcs_z1 + 20
	es_xmath wcs_z2 + 20
	es est_effect 3 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 2 13 16 100 155 255 255
	es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 server_var(wcs_targetid)
	es_xmath wcs_z2 + 30
	es_xmath wcs_z1 + 30
	es est_effect 10 #a 0 sprites/lgtning.vmt server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) 20 400 1 20 100 1 100 155 255 255 10
	ifx true(wcs_race_debugging) do
	{
		wcs_log [Race]: Protoss Carrier - [Block] Skill: 4 (EXECUTED END)
	}
}