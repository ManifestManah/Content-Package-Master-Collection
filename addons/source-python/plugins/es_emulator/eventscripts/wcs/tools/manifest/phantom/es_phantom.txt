/////////////////////////////
//Various Authors Race Pack//
//Version 1.0.1D           //
/////////////////////////////

block onchange
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] OnChange (START)
	}
	es wcsgroup set phantom server_var(wcs_userid) 0

	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] OnChange (END)
	}
}

block death
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Death (START)
	}
	es wcsgroup set phantom event_var(userid) 0
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Death (END)
	}
}

block phantom
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 1 (START)
	}
	es wcsgroup set phantom event_var(userid) 1
	ifx false(wcs_falldamage_compensation) do
	{
		es wcs_setfx falldamage event_var(userid) = 0.95 0
		es_tell event_var(userid) #multi #green [WCS]#lightgreen Phantom - You take reduced fall damage, duck to become less visible
	}
	ifx true(wcs_falldamage_compensation) do
	{
		es_delayed .5 wcs_setfx health event_var(userid) + 25 0
		es_tell event_var(userid) #multi #green [WCS]#lightgreen Phantom - When you duck you'll turn less visible
		es_tell event_var(userid) #multi #green [WCS]#lightgreen Falldamage Compensation - You've been compensated with 25 extra health
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 1 (END)
	}
}

event player_falldamage
{
	es wcsgroup get phantom wcs_tmp5 event_var(userid)
	if (server_var(wcs_tmp5) = 1) do
	{
		ifx true(wcs_race_debugging) do
		{
			wcs_log  [Race]: Phantom - [Block] Event Player_Falldamage (START)
		}
		es_playsound event_var(userid) ambient/energy/force_field_loop1.wav 1
		es_delayed .9 es_stopsound event_var(userid) ambient/energy/force_field_loop1.wav
		es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(userid)
		es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(userid)
		es_xmath wcs_z2 + 50
		es est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_delayed .4 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_delayed .8 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_xmath wcs_z1 + 50
		es_xmath wcs_y1 + 50
		es_delayed .1 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_delayed .5 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_xmath wcs_z1 + 50
		es_xmath wcs_y1 - 50
		es_delayed .2 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_delayed .6 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_xmath wcs_z1 - 50
		es_xmath wcs_y2 - 50
		es_delayed .3 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		es_delayed .7 est_effect 3 #a 0 sprites/physring1.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1) .1 15 1 155 155 155 255
		ifx true(wcs_race_debugging) do
		{
			wcs_log  [Race]: Phantom - [Block] Event Player_Falldamage (END)
		}
	}
}

event player_duck
{
	es wcsgroup get phantom phantom event_var(userid)
	if (server_var(phantom) = 1) do
	{
		ifx true(wcs_race_debugging) do
		{
			wcs_log  [Race]: Phantom - [Block] Event Player_Duck (START)
		}
		es wcs_color event_var(userid) 255 255 255 40 0
		ifx true(wcs_race_debugging) do
		{
			wcs_log  [Race]: Phantom - [Block] Event Player_Duck (END)
		}
	}
}

event player_unduck
{
	es wcsgroup get phantom phantom event_var(userid)
	if (server_var(phantom) = 1) do
	{
		ifx true(wcs_race_debugging) do
		{
			wcs_log  [Race]: Phantom - [Block] Event Player_Unduck (START)
		}
		es wcs_color event_var(userid) 255 255 255 255 0
		ifx true(wcs_race_debugging) do
		{
			wcs_log  [Race]: Phantom - [Block] Event Player_Unduck (END)
		}
	}
}

block sbc
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 2 (START)
	}
	if (server_var(wcs_dice2) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcsgroup get is_frozen wcs_tmp4 event_var(userid)
				if (server_var(wcs_tmp4) == 0) do
				{
					es wcsgroup set is_frozen event_var(userid) 1
					es_delayed 1.5 wcsgroup set is_frozen event_var(userid) 0
					es wcs_pushed event_var(userid) 0 0 475
					es_delayed .2 wcs_setfx gravity event_var(userid) = .2 3
					es_delayed .5 wcs_setfx freeze event_var(userid) = 1 1
					es wcs_setfx health event_var(attacker) + server_var(wcs_rand) 0
					es wcs_centertell event_var(attacker) You leeched server_var(wcs_tmp3) health from event_var(es_username)!
					es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(attacker)
					es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 event_var(userid)
					es_xmath wcs_z1 + 50
					es_xmath wcs_z2 + 150
					es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
					es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
					es_delayed .2 est_effect_06 #a 0 models/effects/splodecard2_sheet.vmt server_var(vector2) server_var(vector1) 10 1.5 9 7 98 0 255 25 25 255 30
					es_delayed .2 est_effect_06 #a 0 sprites/scanner_bottom.vmt server_var(vector1) server_var(vector2) 10 1.5 3 7 98 0 255 25 25 255 0
					es_xmath wcs_z2 + 150
					es_delayed .2 est_effect 10 #a 0 sprites/scanner.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 20 500 1 50 10 1 0 0 0 255 10
					es_delayed .2 est_effect 10 #a 0 sprites/scanner.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 20 500 1 50 10 1 255 0 0 255 10
					es_delayed .4 est_effect 10 #a 0 sprites/scanner.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 20 300 1 50 10 0 255 255 255 255 10
				}
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 2 (END)
	}
}

block illusion
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 3 (START)
	}
	if (server_var(wcs_dice3) <= server_var(wcs_chance)) do
	{
		if (event_var(es_userdead) = 0) do
		{
			if (event_var(es_attackerdead) = 0) do
			{
				es wcs_color event_var(userid) 255 255 255 0 1
				es_delayed 1 wcs_color event_var(userid) 255 255 255 255 1
				es_getplayerlocation wcs_x1 wcs_y1 wcs_z1 event_var(attacker)
				es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
				es wcs_pushto event_var(userid) server_var(vector1) 2.5
			}
		}
	}
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 3 (END)
	}
}

block tele
{
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 4 (START)
	}
    es_xmath wcs_smokestack_counter + 1
	es_give server_var(wcs_userid) env_smokestack
	es_format ss_name "my_ss_%1%2" server_var(wcs_userid) server_var(wcs_smokestack_counter)
    es_entitysetvalue server_var(eventscripts_lastgive) "targetname" server_var(ss_name)
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "basespread 15"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "spreadspeed 105"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "speed 40"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "rate 500"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "startsize 5"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "endsize .1"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "jetlength 200"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "rendercolor 90 25 25"
    es_fire server_var(wcs_userid) server_var(ss_name) addoutput "SmokeMaterial sprites/strider_blackball.vmt"
	es_fire server_var(wcs_userid) server_var(ss_name) turnon
	es_fire server_var(wcs_userid) server_var(ss_name) setparent !activator
    es_delayed 4 es_fire server_var(wcs_userid) server_var(ss_name) kill

    es_xset wcs_ok 1

    es playerget viewcoord server_var(wcs_userid) wcs_x1 wcs_y1 wcs_z1
    es_getplayerlocation wcs_x2 wcs_y2 wcs_z2 server_var(wcs_userid)
    es_xmath wcs_z2 + 25
    es_createvectorstring vector2 server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2)
    es est_effect 7 #a 0 sprites/smoke.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) 25 10
    es est_effect_14 #a 0 effects/strider_muzzle.vmt server_var(vector2) server_var(vector2) 50 50 47
    es est_effect 11 #a 0 effects/strider_muzzle.vmt server_var(wcs_x2) server_var(wcs_y2) server_var(wcs_z2) .4 1 160
    es est_effect_08 #a 0 effects/strider_muzzle.vmt server_var(vector2) 80 85 .5 .5 60 10 0 255 255 255 255 8 5
    es_xmath wcs_z2 - 25

    es_xcopy wcs_x wcs_x1
    es_xcopy wcs_y wcs_y1
    es_xcopy wcs_z wcs_z1

    es_math wcs_x - server_var(wcs_x2)
    es_math wcs_y - server_var(wcs_y2)
    es_math wcs_z - server_var(wcs_z2)

    if (server_var(wcs_x) < 0) then es_xmath wcs_x * -1
    if (server_var(wcs_y) < 0) then es_xmath wcs_y * -1
    if (server_var(wcs_z) < 0) then es_xmath wcs_z * -1

    if (server_var(wcs_range) < server_var(wcs_x)) do
    {
		es_xset wcs_ok 0
    }
    if (server_var(wcs_range) < server_var(wcs_y)) do
    {
		es_xset wcs_ok 0
    }
    if (server_var(wcs_range) < server_var(wcs_z)) do
    {
		es_xset wcs_ok 0
    }
    
    ifx true(wcs_ok) do
    {
 	    ifx true(wcs_legacy_teleport_fade) do
	    {
	    	es wcs_fade server_var(wcs_userid) 65 255 30 50 1 1
	    }
 	    ifx true(wcs_legacy_teleport_type) do
	    {
	    	//To Do: Improve this by finding an alternative teleportation method that prevent players from getting stuck in displacemnts and models
	    	es playerset location server_var(wcs_userid) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	    	es_delayed .01 wcs_teleport server_var(wcs_userid) server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	    }
	    ifx false(wcs_legacy_teleport_type) do
	    {
	    	es_setplayerprop server_var(wcs_userid) CBasePlayer.localdata.m_vecBaseVelocity 0,0,250
	        es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	        es_delayed .01 wcs_pushto server_var(wcs_userid) server_var(vector1) 2
	    }
        es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreenTeleport - You Teleported!
        es_playsound server_var(wcs_userid) wcs/teleport.mp3 1
    }
    
    else do
    {
        if (server_var(wcs_range) < server_var(wcs_x)) do
        {
            if (server_var(wcs_x2) >= 0) do
            {
                if (server_var(wcs_x1) >= 0) do
                {
                    if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
                    if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_x2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_x1) < 0) do
                {
                    if (server_var(wcs_x2) <= server_var(wcs_x1)) then es_xmath wcs_x2 + server_var(wcs_range)
                    if (server_var(wcs_x2) > server_var(wcs_x1)) then es_xmath wcs_x2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_x2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_x1 wcs_x2
        }
        
        if (server_var(wcs_range) < server_var(wcs_y)) do
        {
            if (server_var(wcs_y2) >= 0) do
            {
                if (server_var(wcs_y1) >= 0) do
                {
                    if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
                    if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_y2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_y1) < 0) do
                {
                    if (server_var(wcs_y2) <= server_var(wcs_y1)) then es_xmath wcs_y2 + server_var(wcs_range)
                    if (server_var(wcs_y2) > server_var(wcs_y1)) then es_xmath wcs_y2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_y2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_y1 wcs_y2
        }
        
        if (server_var(wcs_range) < server_var(wcs_z)) do
        {
            if (server_var(wcs_z2) >= 0) do
            {
                if (server_var(wcs_z1) >= 0) do
                {
                    if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
                    if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_z2 - server_var(wcs_range)
                }
            }
            else do
            {
                if (server_var(wcs_z1) < 0) do
                {
                    if (server_var(wcs_z2) <= server_var(wcs_z1)) then es_xmath wcs_z2 + server_var(wcs_range)
                    if (server_var(wcs_z2) > server_var(wcs_z1)) then es_xmath wcs_z2 - server_var(wcs_range)
                }
                else do
                {
                    es_math wcs_z2 + server_var(wcs_range)
                }
            }
            es_xcopy wcs_z1 wcs_z2
        }

	    ifx false(wcs_legacy_teleport_type) do
	    {
	        es_createvectorstring vector1 server_var(wcs_x1) server_var(wcs_y1) server_var(wcs_z1)
	        es_delayed .01 wcs_pushto server_var(wcs_userid) server_var(vector1) .1
	    }
 	    ifx true(wcs_legacy_teleport_fade) do
	    {
	    	es wcs_fade server_var(wcs_userid) 65 255 30 50 1 1
	    }
        es_tell server_var(wcs_userid) #multi #green [WCS]#lightgreenTeleport - You cannot teleport that far!
	    es wcs_setcooldown server_var(wcs_userid) 0
    }
	ifx true(wcs_race_debugging) do
	{
		wcs_log  [Race]: Phantom - [Block] Skill: 4 (END)
	}
}